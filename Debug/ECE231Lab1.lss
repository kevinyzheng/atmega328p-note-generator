
ECE231Lab1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000005d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000055c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  00800100  00800100  000005d0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005d0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000600  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000640  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000079e  00000000  00000000  00000678  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000691  00000000  00000000  00000e16  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000069a  00000000  00000000  000014a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000054  00000000  00000000  00001b44  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0001096d  00000000  00000000  00001b98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000007f  00000000  00000000  00012505  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00012584  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00000471  00000000  00000000  000125ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	41 c0       	rjmp	.+130    	; 0x88 <__bad_interrupt>
   6:	00 00       	nop
   8:	3f c0       	rjmp	.+126    	; 0x88 <__bad_interrupt>
   a:	00 00       	nop
   c:	3d c0       	rjmp	.+122    	; 0x88 <__bad_interrupt>
   e:	00 00       	nop
  10:	3b c0       	rjmp	.+118    	; 0x88 <__bad_interrupt>
  12:	00 00       	nop
  14:	39 c0       	rjmp	.+114    	; 0x88 <__bad_interrupt>
  16:	00 00       	nop
  18:	37 c0       	rjmp	.+110    	; 0x88 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	35 c0       	rjmp	.+106    	; 0x88 <__bad_interrupt>
  1e:	00 00       	nop
  20:	33 c0       	rjmp	.+102    	; 0x88 <__bad_interrupt>
  22:	00 00       	nop
  24:	31 c0       	rjmp	.+98     	; 0x88 <__bad_interrupt>
  26:	00 00       	nop
  28:	2f c0       	rjmp	.+94     	; 0x88 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	2d c0       	rjmp	.+90     	; 0x88 <__bad_interrupt>
  2e:	00 00       	nop
  30:	2b c0       	rjmp	.+86     	; 0x88 <__bad_interrupt>
  32:	00 00       	nop
  34:	29 c0       	rjmp	.+82     	; 0x88 <__bad_interrupt>
  36:	00 00       	nop
  38:	27 c0       	rjmp	.+78     	; 0x88 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	25 c0       	rjmp	.+74     	; 0x88 <__bad_interrupt>
  3e:	00 00       	nop
  40:	23 c0       	rjmp	.+70     	; 0x88 <__bad_interrupt>
  42:	00 00       	nop
  44:	21 c0       	rjmp	.+66     	; 0x88 <__bad_interrupt>
  46:	00 00       	nop
  48:	1f c0       	rjmp	.+62     	; 0x88 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	1d c0       	rjmp	.+58     	; 0x88 <__bad_interrupt>
  4e:	00 00       	nop
  50:	1b c0       	rjmp	.+54     	; 0x88 <__bad_interrupt>
  52:	00 00       	nop
  54:	19 c0       	rjmp	.+50     	; 0x88 <__bad_interrupt>
  56:	00 00       	nop
  58:	17 c0       	rjmp	.+46     	; 0x88 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	15 c0       	rjmp	.+42     	; 0x88 <__bad_interrupt>
  5e:	00 00       	nop
  60:	13 c0       	rjmp	.+38     	; 0x88 <__bad_interrupt>
  62:	00 00       	nop
  64:	11 c0       	rjmp	.+34     	; 0x88 <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a6 31       	cpi	r26, 0x16	; 22
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	51 d0       	rcall	.+162    	; 0x128 <main>
  86:	68 c2       	rjmp	.+1232   	; 0x558 <_exit>

00000088 <__bad_interrupt>:
  88:	bb cf       	rjmp	.-138    	; 0x0 <__vectors>

0000008a <adc_init>:
	}
}

void adc_init(void)
{
	ADCSRA |= ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));
  8a:	ea e7       	ldi	r30, 0x7A	; 122
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	80 81       	ld	r24, Z
  90:	87 60       	ori	r24, 0x07	; 7
  92:	80 83       	st	Z, r24
	ADMUX |= (1<<REFS0);
  94:	ac e7       	ldi	r26, 0x7C	; 124
  96:	b0 e0       	ldi	r27, 0x00	; 0
  98:	8c 91       	ld	r24, X
  9a:	80 64       	ori	r24, 0x40	; 64
  9c:	8c 93       	st	X, r24
	ADCSRA |= (1<<ADEN);
  9e:	80 81       	ld	r24, Z
  a0:	80 68       	ori	r24, 0x80	; 128
  a2:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
  a4:	80 81       	ld	r24, Z
  a6:	80 64       	ori	r24, 0x40	; 64
  a8:	80 83       	st	Z, r24
  aa:	08 95       	ret

000000ac <read_adc>:
}

uint16_t read_adc(uint8_t channel)
{
	ADMUX &= 0xF0;
  ac:	ec e7       	ldi	r30, 0x7C	; 124
  ae:	f0 e0       	ldi	r31, 0x00	; 0
  b0:	90 81       	ld	r25, Z
  b2:	90 7f       	andi	r25, 0xF0	; 240
  b4:	90 83       	st	Z, r25
	ADMUX |= channel;
  b6:	90 81       	ld	r25, Z
  b8:	89 2b       	or	r24, r25
  ba:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
  bc:	ea e7       	ldi	r30, 0x7A	; 122
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	80 81       	ld	r24, Z
  c2:	80 64       	ori	r24, 0x40	; 64
  c4:	80 83       	st	Z, r24
	while(ADCSRA & (1<<ADSC));
  c6:	80 81       	ld	r24, Z
  c8:	86 fd       	sbrc	r24, 6
  ca:	fd cf       	rjmp	.-6      	; 0xc6 <read_adc+0x1a>
	return ADCW;
  cc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
  d0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
}
  d4:	08 95       	ret

000000d6 <half_period_loookup>:
 * Calculate half period of a given note number obtained from ADC
 * Returns int32 of number of instructions needed to produce given note number
 */
uint32_t half_period_loookup(uint16_t note_number)
{
	if (note_number >= 13) return 122 - (note_number-13)*5.5;			// higher notes
  d6:	8d 30       	cpi	r24, 0x0D	; 13
  d8:	91 05       	cpc	r25, r1
  da:	98 f0       	brcs	.+38     	; 0x102 <half_period_loookup+0x2c>
  dc:	bc 01       	movw	r22, r24
  de:	6d 50       	subi	r22, 0x0D	; 13
  e0:	71 09       	sbc	r23, r1
  e2:	80 e0       	ldi	r24, 0x00	; 0
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	38 d1       	rcall	.+624    	; 0x358 <__floatunsisf>
  e8:	20 e0       	ldi	r18, 0x00	; 0
  ea:	30 e0       	ldi	r19, 0x00	; 0
  ec:	40 eb       	ldi	r20, 0xB0	; 176
  ee:	50 e4       	ldi	r21, 0x40	; 64
  f0:	c1 d1       	rcall	.+898    	; 0x474 <__mulsf3>
  f2:	9b 01       	movw	r18, r22
  f4:	ac 01       	movw	r20, r24
  f6:	60 e0       	ldi	r22, 0x00	; 0
  f8:	70 e0       	ldi	r23, 0x00	; 0
  fa:	84 ef       	ldi	r24, 0xF4	; 244
  fc:	92 e4       	ldi	r25, 0x42	; 66
  fe:	9b d0       	rcall	.+310    	; 0x236 <__subsf3>
 100:	ff c0       	rjmp	.+510    	; 0x300 <__fixunssfsi>
	else if (note_number < 13) return 255-(note_number-1)*11.083;		// lower notes
 102:	bc 01       	movw	r22, r24
 104:	61 50       	subi	r22, 0x01	; 1
 106:	71 09       	sbc	r23, r1
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	25 d1       	rcall	.+586    	; 0x358 <__floatunsisf>
 10e:	28 ef       	ldi	r18, 0xF8	; 248
 110:	33 e5       	ldi	r19, 0x53	; 83
 112:	41 e3       	ldi	r20, 0x31	; 49
 114:	51 e4       	ldi	r21, 0x41	; 65
 116:	ae d1       	rcall	.+860    	; 0x474 <__mulsf3>
 118:	9b 01       	movw	r18, r22
 11a:	ac 01       	movw	r20, r24
 11c:	60 e0       	ldi	r22, 0x00	; 0
 11e:	70 e0       	ldi	r23, 0x00	; 0
 120:	8f e7       	ldi	r24, 0x7F	; 127
 122:	93 e4       	ldi	r25, 0x43	; 67
 124:	88 d0       	rcall	.+272    	; 0x236 <__subsf3>
	return 0;
 126:	ec c0       	rjmp	.+472    	; 0x300 <__fixunssfsi>

00000128 <main>:
uint16_t read_adc(uint8_t channel);
uint32_t half_period_loookup(uint16_t note_number);

int main(void)
{
	adc_init();
 128:	b0 df       	rcall	.-160    	; 0x8a <adc_init>
	
	// set output pins
	DDRB = 0b00000001;
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	84 b9       	out	0x04, r24	; 4
		half_period = half_period_loookup((read_adc(5) / 41) + 1);
		high_half_period = half_period;
		low_half_period = half_period;
		
		// PB0 HIGH - peak
		PORTB = 0b00000001;
 12e:	c1 e0       	ldi	r28, 0x01	; 1

	while(1)
	{
		// each interval of ADC values is 41 wide
		// integer division by 41 of ADC value is one less than ad hoc note number
		half_period = half_period_loookup((read_adc(5) / 41) + 1);
 130:	85 e0       	ldi	r24, 0x05	; 5
 132:	bc df       	rcall	.-136    	; 0xac <read_adc>
 134:	ac 01       	movw	r20, r24
 136:	9c 01       	movw	r18, r24
 138:	ad e9       	ldi	r26, 0x9D	; 157
 13a:	bf e8       	ldi	r27, 0x8F	; 143
 13c:	fe d1       	rcall	.+1020   	; 0x53a <__umulhisi3>
 13e:	48 1b       	sub	r20, r24
 140:	59 0b       	sbc	r21, r25
 142:	56 95       	lsr	r21
 144:	47 95       	ror	r20
 146:	84 0f       	add	r24, r20
 148:	95 1f       	adc	r25, r21
 14a:	96 95       	lsr	r25
 14c:	87 95       	ror	r24
 14e:	92 95       	swap	r25
 150:	82 95       	swap	r24
 152:	8f 70       	andi	r24, 0x0F	; 15
 154:	89 27       	eor	r24, r25
 156:	9f 70       	andi	r25, 0x0F	; 15
 158:	89 27       	eor	r24, r25
 15a:	01 96       	adiw	r24, 0x01	; 1
 15c:	bc df       	rcall	.-136    	; 0xd6 <half_period_loookup>
 15e:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <half_period>
 162:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <half_period+0x1>
 166:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <half_period+0x2>
 16a:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <half_period+0x3>
		high_half_period = half_period;
 16e:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <high_half_period>
 172:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <high_half_period+0x1>
 176:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <high_half_period+0x2>
 17a:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <high_half_period+0x3>
		low_half_period = half_period;
 17e:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <low_half_period>
 182:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <low_half_period+0x1>
 186:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <low_half_period+0x2>
 18a:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <low_half_period+0x3>
		
		// PB0 HIGH - peak
		PORTB = 0b00000001;
 18e:	c5 b9       	out	0x05, r28	; 5
		while(high_half_period > 0)
 190:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <high_half_period>
 194:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <high_half_period+0x1>
 198:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <high_half_period+0x2>
 19c:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <high_half_period+0x3>
 1a0:	41 15       	cp	r20, r1
 1a2:	51 05       	cpc	r21, r1
 1a4:	61 05       	cpc	r22, r1
 1a6:	71 05       	cpc	r23, r1
 1a8:	d9 f0       	breq	.+54     	; 0x1e0 <main+0xb8>
void adc_init(void);
uint16_t read_adc(uint8_t channel);
uint32_t half_period_loookup(uint16_t note_number);

int main(void)
{
 1aa:	80 e0       	ldi	r24, 0x00	; 0
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	01 96       	adiw	r24, 0x01	; 1
		PORTB = 0b00000001;
		while(high_half_period > 0)
		{
			// repeat smaller unit of time
			high_index = 0x0012;
			while(high_index > 0) high_index--;
 1b0:	82 31       	cpi	r24, 0x12	; 18
 1b2:	91 05       	cpc	r25, r1
 1b4:	e1 f7       	brne	.-8      	; 0x1ae <main+0x86>
			high_half_period--;
 1b6:	41 50       	subi	r20, 0x01	; 1
 1b8:	51 09       	sbc	r21, r1
 1ba:	61 09       	sbc	r22, r1
 1bc:	71 09       	sbc	r23, r1
		high_half_period = half_period;
		low_half_period = half_period;
		
		// PB0 HIGH - peak
		PORTB = 0b00000001;
		while(high_half_period > 0)
 1be:	a9 f7       	brne	.-22     	; 0x1aa <main+0x82>
 1c0:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 1c4:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 1c8:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <_edata+0x2>
 1cc:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <_edata+0x3>
 1d0:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <high_half_period>
 1d4:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <high_half_period+0x1>
 1d8:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <high_half_period+0x2>
 1dc:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <high_half_period+0x3>
			while(high_index > 0) high_index--;
			high_half_period--;
		}
		
		// PB0 LOW - trough
		PORTB = 0b00000000;
 1e0:	15 b8       	out	0x05, r1	; 5
		while(low_half_period > 0)
 1e2:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <low_half_period>
 1e6:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <low_half_period+0x1>
 1ea:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <low_half_period+0x2>
 1ee:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <low_half_period+0x3>
 1f2:	41 15       	cp	r20, r1
 1f4:	51 05       	cpc	r21, r1
 1f6:	61 05       	cpc	r22, r1
 1f8:	71 05       	cpc	r23, r1
 1fa:	09 f4       	brne	.+2      	; 0x1fe <main+0xd6>
 1fc:	99 cf       	rjmp	.-206    	; 0x130 <main+0x8>
void adc_init(void);
uint16_t read_adc(uint8_t channel);
uint32_t half_period_loookup(uint16_t note_number);

int main(void)
{
 1fe:	80 e0       	ldi	r24, 0x00	; 0
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	01 96       	adiw	r24, 0x01	; 1
		PORTB = 0b00000000;
		while(low_half_period > 0)
		{
			// repeat smaller unit of time
			low_index = 0x0012;
			while(low_index > 0) low_index--;
 204:	82 31       	cpi	r24, 0x12	; 18
 206:	91 05       	cpc	r25, r1
 208:	e1 f7       	brne	.-8      	; 0x202 <main+0xda>
			low_half_period--;
 20a:	41 50       	subi	r20, 0x01	; 1
 20c:	51 09       	sbc	r21, r1
 20e:	61 09       	sbc	r22, r1
 210:	71 09       	sbc	r23, r1
			high_half_period--;
		}
		
		// PB0 LOW - trough
		PORTB = 0b00000000;
		while(low_half_period > 0)
 212:	a9 f7       	brne	.-22     	; 0x1fe <main+0xd6>
 214:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <low_index>
 218:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <low_index+0x1>
 21c:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <low_index+0x2>
 220:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <low_index+0x3>
 224:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <low_half_period>
 228:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <low_half_period+0x1>
 22c:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <low_half_period+0x2>
 230:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <low_half_period+0x3>
 234:	7d cf       	rjmp	.-262    	; 0x130 <main+0x8>

00000236 <__subsf3>:
 236:	50 58       	subi	r21, 0x80	; 128

00000238 <__addsf3>:
 238:	bb 27       	eor	r27, r27
 23a:	aa 27       	eor	r26, r26
 23c:	0e d0       	rcall	.+28     	; 0x25a <__addsf3x>
 23e:	e0 c0       	rjmp	.+448    	; 0x400 <__fp_round>
 240:	d1 d0       	rcall	.+418    	; 0x3e4 <__fp_pscA>
 242:	30 f0       	brcs	.+12     	; 0x250 <__addsf3+0x18>
 244:	d6 d0       	rcall	.+428    	; 0x3f2 <__fp_pscB>
 246:	20 f0       	brcs	.+8      	; 0x250 <__addsf3+0x18>
 248:	31 f4       	brne	.+12     	; 0x256 <__addsf3+0x1e>
 24a:	9f 3f       	cpi	r25, 0xFF	; 255
 24c:	11 f4       	brne	.+4      	; 0x252 <__addsf3+0x1a>
 24e:	1e f4       	brtc	.+6      	; 0x256 <__addsf3+0x1e>
 250:	c6 c0       	rjmp	.+396    	; 0x3de <__fp_nan>
 252:	0e f4       	brtc	.+2      	; 0x256 <__addsf3+0x1e>
 254:	e0 95       	com	r30
 256:	e7 fb       	bst	r30, 7
 258:	bc c0       	rjmp	.+376    	; 0x3d2 <__fp_inf>

0000025a <__addsf3x>:
 25a:	e9 2f       	mov	r30, r25
 25c:	e2 d0       	rcall	.+452    	; 0x422 <__fp_split3>
 25e:	80 f3       	brcs	.-32     	; 0x240 <__addsf3+0x8>
 260:	ba 17       	cp	r27, r26
 262:	62 07       	cpc	r22, r18
 264:	73 07       	cpc	r23, r19
 266:	84 07       	cpc	r24, r20
 268:	95 07       	cpc	r25, r21
 26a:	18 f0       	brcs	.+6      	; 0x272 <__addsf3x+0x18>
 26c:	71 f4       	brne	.+28     	; 0x28a <__addsf3x+0x30>
 26e:	9e f5       	brtc	.+102    	; 0x2d6 <__addsf3x+0x7c>
 270:	fa c0       	rjmp	.+500    	; 0x466 <__fp_zero>
 272:	0e f4       	brtc	.+2      	; 0x276 <__addsf3x+0x1c>
 274:	e0 95       	com	r30
 276:	0b 2e       	mov	r0, r27
 278:	ba 2f       	mov	r27, r26
 27a:	a0 2d       	mov	r26, r0
 27c:	0b 01       	movw	r0, r22
 27e:	b9 01       	movw	r22, r18
 280:	90 01       	movw	r18, r0
 282:	0c 01       	movw	r0, r24
 284:	ca 01       	movw	r24, r20
 286:	a0 01       	movw	r20, r0
 288:	11 24       	eor	r1, r1
 28a:	ff 27       	eor	r31, r31
 28c:	59 1b       	sub	r21, r25
 28e:	99 f0       	breq	.+38     	; 0x2b6 <__addsf3x+0x5c>
 290:	59 3f       	cpi	r21, 0xF9	; 249
 292:	50 f4       	brcc	.+20     	; 0x2a8 <__addsf3x+0x4e>
 294:	50 3e       	cpi	r21, 0xE0	; 224
 296:	68 f1       	brcs	.+90     	; 0x2f2 <__addsf3x+0x98>
 298:	1a 16       	cp	r1, r26
 29a:	f0 40       	sbci	r31, 0x00	; 0
 29c:	a2 2f       	mov	r26, r18
 29e:	23 2f       	mov	r18, r19
 2a0:	34 2f       	mov	r19, r20
 2a2:	44 27       	eor	r20, r20
 2a4:	58 5f       	subi	r21, 0xF8	; 248
 2a6:	f3 cf       	rjmp	.-26     	; 0x28e <__addsf3x+0x34>
 2a8:	46 95       	lsr	r20
 2aa:	37 95       	ror	r19
 2ac:	27 95       	ror	r18
 2ae:	a7 95       	ror	r26
 2b0:	f0 40       	sbci	r31, 0x00	; 0
 2b2:	53 95       	inc	r21
 2b4:	c9 f7       	brne	.-14     	; 0x2a8 <__addsf3x+0x4e>
 2b6:	7e f4       	brtc	.+30     	; 0x2d6 <__addsf3x+0x7c>
 2b8:	1f 16       	cp	r1, r31
 2ba:	ba 0b       	sbc	r27, r26
 2bc:	62 0b       	sbc	r22, r18
 2be:	73 0b       	sbc	r23, r19
 2c0:	84 0b       	sbc	r24, r20
 2c2:	ba f0       	brmi	.+46     	; 0x2f2 <__addsf3x+0x98>
 2c4:	91 50       	subi	r25, 0x01	; 1
 2c6:	a1 f0       	breq	.+40     	; 0x2f0 <__addsf3x+0x96>
 2c8:	ff 0f       	add	r31, r31
 2ca:	bb 1f       	adc	r27, r27
 2cc:	66 1f       	adc	r22, r22
 2ce:	77 1f       	adc	r23, r23
 2d0:	88 1f       	adc	r24, r24
 2d2:	c2 f7       	brpl	.-16     	; 0x2c4 <__addsf3x+0x6a>
 2d4:	0e c0       	rjmp	.+28     	; 0x2f2 <__addsf3x+0x98>
 2d6:	ba 0f       	add	r27, r26
 2d8:	62 1f       	adc	r22, r18
 2da:	73 1f       	adc	r23, r19
 2dc:	84 1f       	adc	r24, r20
 2de:	48 f4       	brcc	.+18     	; 0x2f2 <__addsf3x+0x98>
 2e0:	87 95       	ror	r24
 2e2:	77 95       	ror	r23
 2e4:	67 95       	ror	r22
 2e6:	b7 95       	ror	r27
 2e8:	f7 95       	ror	r31
 2ea:	9e 3f       	cpi	r25, 0xFE	; 254
 2ec:	08 f0       	brcs	.+2      	; 0x2f0 <__addsf3x+0x96>
 2ee:	b3 cf       	rjmp	.-154    	; 0x256 <__addsf3+0x1e>
 2f0:	93 95       	inc	r25
 2f2:	88 0f       	add	r24, r24
 2f4:	08 f0       	brcs	.+2      	; 0x2f8 <__addsf3x+0x9e>
 2f6:	99 27       	eor	r25, r25
 2f8:	ee 0f       	add	r30, r30
 2fa:	97 95       	ror	r25
 2fc:	87 95       	ror	r24
 2fe:	08 95       	ret

00000300 <__fixunssfsi>:
 300:	98 d0       	rcall	.+304    	; 0x432 <__fp_splitA>
 302:	88 f0       	brcs	.+34     	; 0x326 <__fixunssfsi+0x26>
 304:	9f 57       	subi	r25, 0x7F	; 127
 306:	90 f0       	brcs	.+36     	; 0x32c <__fixunssfsi+0x2c>
 308:	b9 2f       	mov	r27, r25
 30a:	99 27       	eor	r25, r25
 30c:	b7 51       	subi	r27, 0x17	; 23
 30e:	a0 f0       	brcs	.+40     	; 0x338 <__fixunssfsi+0x38>
 310:	d1 f0       	breq	.+52     	; 0x346 <__fixunssfsi+0x46>
 312:	66 0f       	add	r22, r22
 314:	77 1f       	adc	r23, r23
 316:	88 1f       	adc	r24, r24
 318:	99 1f       	adc	r25, r25
 31a:	1a f0       	brmi	.+6      	; 0x322 <__fixunssfsi+0x22>
 31c:	ba 95       	dec	r27
 31e:	c9 f7       	brne	.-14     	; 0x312 <__fixunssfsi+0x12>
 320:	12 c0       	rjmp	.+36     	; 0x346 <__fixunssfsi+0x46>
 322:	b1 30       	cpi	r27, 0x01	; 1
 324:	81 f0       	breq	.+32     	; 0x346 <__fixunssfsi+0x46>
 326:	9f d0       	rcall	.+318    	; 0x466 <__fp_zero>
 328:	b1 e0       	ldi	r27, 0x01	; 1
 32a:	08 95       	ret
 32c:	9c c0       	rjmp	.+312    	; 0x466 <__fp_zero>
 32e:	67 2f       	mov	r22, r23
 330:	78 2f       	mov	r23, r24
 332:	88 27       	eor	r24, r24
 334:	b8 5f       	subi	r27, 0xF8	; 248
 336:	39 f0       	breq	.+14     	; 0x346 <__fixunssfsi+0x46>
 338:	b9 3f       	cpi	r27, 0xF9	; 249
 33a:	cc f3       	brlt	.-14     	; 0x32e <__fixunssfsi+0x2e>
 33c:	86 95       	lsr	r24
 33e:	77 95       	ror	r23
 340:	67 95       	ror	r22
 342:	b3 95       	inc	r27
 344:	d9 f7       	brne	.-10     	; 0x33c <__fixunssfsi+0x3c>
 346:	3e f4       	brtc	.+14     	; 0x356 <__fixunssfsi+0x56>
 348:	90 95       	com	r25
 34a:	80 95       	com	r24
 34c:	70 95       	com	r23
 34e:	61 95       	neg	r22
 350:	7f 4f       	sbci	r23, 0xFF	; 255
 352:	8f 4f       	sbci	r24, 0xFF	; 255
 354:	9f 4f       	sbci	r25, 0xFF	; 255
 356:	08 95       	ret

00000358 <__floatunsisf>:
 358:	e8 94       	clt
 35a:	09 c0       	rjmp	.+18     	; 0x36e <__floatsisf+0x12>

0000035c <__floatsisf>:
 35c:	97 fb       	bst	r25, 7
 35e:	3e f4       	brtc	.+14     	; 0x36e <__floatsisf+0x12>
 360:	90 95       	com	r25
 362:	80 95       	com	r24
 364:	70 95       	com	r23
 366:	61 95       	neg	r22
 368:	7f 4f       	sbci	r23, 0xFF	; 255
 36a:	8f 4f       	sbci	r24, 0xFF	; 255
 36c:	9f 4f       	sbci	r25, 0xFF	; 255
 36e:	99 23       	and	r25, r25
 370:	a9 f0       	breq	.+42     	; 0x39c <__floatsisf+0x40>
 372:	f9 2f       	mov	r31, r25
 374:	96 e9       	ldi	r25, 0x96	; 150
 376:	bb 27       	eor	r27, r27
 378:	93 95       	inc	r25
 37a:	f6 95       	lsr	r31
 37c:	87 95       	ror	r24
 37e:	77 95       	ror	r23
 380:	67 95       	ror	r22
 382:	b7 95       	ror	r27
 384:	f1 11       	cpse	r31, r1
 386:	f8 cf       	rjmp	.-16     	; 0x378 <__floatsisf+0x1c>
 388:	fa f4       	brpl	.+62     	; 0x3c8 <__floatsisf+0x6c>
 38a:	bb 0f       	add	r27, r27
 38c:	11 f4       	brne	.+4      	; 0x392 <__floatsisf+0x36>
 38e:	60 ff       	sbrs	r22, 0
 390:	1b c0       	rjmp	.+54     	; 0x3c8 <__floatsisf+0x6c>
 392:	6f 5f       	subi	r22, 0xFF	; 255
 394:	7f 4f       	sbci	r23, 0xFF	; 255
 396:	8f 4f       	sbci	r24, 0xFF	; 255
 398:	9f 4f       	sbci	r25, 0xFF	; 255
 39a:	16 c0       	rjmp	.+44     	; 0x3c8 <__floatsisf+0x6c>
 39c:	88 23       	and	r24, r24
 39e:	11 f0       	breq	.+4      	; 0x3a4 <__floatsisf+0x48>
 3a0:	96 e9       	ldi	r25, 0x96	; 150
 3a2:	11 c0       	rjmp	.+34     	; 0x3c6 <__floatsisf+0x6a>
 3a4:	77 23       	and	r23, r23
 3a6:	21 f0       	breq	.+8      	; 0x3b0 <__floatsisf+0x54>
 3a8:	9e e8       	ldi	r25, 0x8E	; 142
 3aa:	87 2f       	mov	r24, r23
 3ac:	76 2f       	mov	r23, r22
 3ae:	05 c0       	rjmp	.+10     	; 0x3ba <__floatsisf+0x5e>
 3b0:	66 23       	and	r22, r22
 3b2:	71 f0       	breq	.+28     	; 0x3d0 <__floatsisf+0x74>
 3b4:	96 e8       	ldi	r25, 0x86	; 134
 3b6:	86 2f       	mov	r24, r22
 3b8:	70 e0       	ldi	r23, 0x00	; 0
 3ba:	60 e0       	ldi	r22, 0x00	; 0
 3bc:	2a f0       	brmi	.+10     	; 0x3c8 <__floatsisf+0x6c>
 3be:	9a 95       	dec	r25
 3c0:	66 0f       	add	r22, r22
 3c2:	77 1f       	adc	r23, r23
 3c4:	88 1f       	adc	r24, r24
 3c6:	da f7       	brpl	.-10     	; 0x3be <__floatsisf+0x62>
 3c8:	88 0f       	add	r24, r24
 3ca:	96 95       	lsr	r25
 3cc:	87 95       	ror	r24
 3ce:	97 f9       	bld	r25, 7
 3d0:	08 95       	ret

000003d2 <__fp_inf>:
 3d2:	97 f9       	bld	r25, 7
 3d4:	9f 67       	ori	r25, 0x7F	; 127
 3d6:	80 e8       	ldi	r24, 0x80	; 128
 3d8:	70 e0       	ldi	r23, 0x00	; 0
 3da:	60 e0       	ldi	r22, 0x00	; 0
 3dc:	08 95       	ret

000003de <__fp_nan>:
 3de:	9f ef       	ldi	r25, 0xFF	; 255
 3e0:	80 ec       	ldi	r24, 0xC0	; 192
 3e2:	08 95       	ret

000003e4 <__fp_pscA>:
 3e4:	00 24       	eor	r0, r0
 3e6:	0a 94       	dec	r0
 3e8:	16 16       	cp	r1, r22
 3ea:	17 06       	cpc	r1, r23
 3ec:	18 06       	cpc	r1, r24
 3ee:	09 06       	cpc	r0, r25
 3f0:	08 95       	ret

000003f2 <__fp_pscB>:
 3f2:	00 24       	eor	r0, r0
 3f4:	0a 94       	dec	r0
 3f6:	12 16       	cp	r1, r18
 3f8:	13 06       	cpc	r1, r19
 3fa:	14 06       	cpc	r1, r20
 3fc:	05 06       	cpc	r0, r21
 3fe:	08 95       	ret

00000400 <__fp_round>:
 400:	09 2e       	mov	r0, r25
 402:	03 94       	inc	r0
 404:	00 0c       	add	r0, r0
 406:	11 f4       	brne	.+4      	; 0x40c <__fp_round+0xc>
 408:	88 23       	and	r24, r24
 40a:	52 f0       	brmi	.+20     	; 0x420 <__fp_round+0x20>
 40c:	bb 0f       	add	r27, r27
 40e:	40 f4       	brcc	.+16     	; 0x420 <__fp_round+0x20>
 410:	bf 2b       	or	r27, r31
 412:	11 f4       	brne	.+4      	; 0x418 <__fp_round+0x18>
 414:	60 ff       	sbrs	r22, 0
 416:	04 c0       	rjmp	.+8      	; 0x420 <__fp_round+0x20>
 418:	6f 5f       	subi	r22, 0xFF	; 255
 41a:	7f 4f       	sbci	r23, 0xFF	; 255
 41c:	8f 4f       	sbci	r24, 0xFF	; 255
 41e:	9f 4f       	sbci	r25, 0xFF	; 255
 420:	08 95       	ret

00000422 <__fp_split3>:
 422:	57 fd       	sbrc	r21, 7
 424:	90 58       	subi	r25, 0x80	; 128
 426:	44 0f       	add	r20, r20
 428:	55 1f       	adc	r21, r21
 42a:	59 f0       	breq	.+22     	; 0x442 <__fp_splitA+0x10>
 42c:	5f 3f       	cpi	r21, 0xFF	; 255
 42e:	71 f0       	breq	.+28     	; 0x44c <__fp_splitA+0x1a>
 430:	47 95       	ror	r20

00000432 <__fp_splitA>:
 432:	88 0f       	add	r24, r24
 434:	97 fb       	bst	r25, 7
 436:	99 1f       	adc	r25, r25
 438:	61 f0       	breq	.+24     	; 0x452 <__fp_splitA+0x20>
 43a:	9f 3f       	cpi	r25, 0xFF	; 255
 43c:	79 f0       	breq	.+30     	; 0x45c <__fp_splitA+0x2a>
 43e:	87 95       	ror	r24
 440:	08 95       	ret
 442:	12 16       	cp	r1, r18
 444:	13 06       	cpc	r1, r19
 446:	14 06       	cpc	r1, r20
 448:	55 1f       	adc	r21, r21
 44a:	f2 cf       	rjmp	.-28     	; 0x430 <__fp_split3+0xe>
 44c:	46 95       	lsr	r20
 44e:	f1 df       	rcall	.-30     	; 0x432 <__fp_splitA>
 450:	08 c0       	rjmp	.+16     	; 0x462 <__fp_splitA+0x30>
 452:	16 16       	cp	r1, r22
 454:	17 06       	cpc	r1, r23
 456:	18 06       	cpc	r1, r24
 458:	99 1f       	adc	r25, r25
 45a:	f1 cf       	rjmp	.-30     	; 0x43e <__fp_splitA+0xc>
 45c:	86 95       	lsr	r24
 45e:	71 05       	cpc	r23, r1
 460:	61 05       	cpc	r22, r1
 462:	08 94       	sec
 464:	08 95       	ret

00000466 <__fp_zero>:
 466:	e8 94       	clt

00000468 <__fp_szero>:
 468:	bb 27       	eor	r27, r27
 46a:	66 27       	eor	r22, r22
 46c:	77 27       	eor	r23, r23
 46e:	cb 01       	movw	r24, r22
 470:	97 f9       	bld	r25, 7
 472:	08 95       	ret

00000474 <__mulsf3>:
 474:	0b d0       	rcall	.+22     	; 0x48c <__mulsf3x>
 476:	c4 cf       	rjmp	.-120    	; 0x400 <__fp_round>
 478:	b5 df       	rcall	.-150    	; 0x3e4 <__fp_pscA>
 47a:	28 f0       	brcs	.+10     	; 0x486 <__mulsf3+0x12>
 47c:	ba df       	rcall	.-140    	; 0x3f2 <__fp_pscB>
 47e:	18 f0       	brcs	.+6      	; 0x486 <__mulsf3+0x12>
 480:	95 23       	and	r25, r21
 482:	09 f0       	breq	.+2      	; 0x486 <__mulsf3+0x12>
 484:	a6 cf       	rjmp	.-180    	; 0x3d2 <__fp_inf>
 486:	ab cf       	rjmp	.-170    	; 0x3de <__fp_nan>
 488:	11 24       	eor	r1, r1
 48a:	ee cf       	rjmp	.-36     	; 0x468 <__fp_szero>

0000048c <__mulsf3x>:
 48c:	ca df       	rcall	.-108    	; 0x422 <__fp_split3>
 48e:	a0 f3       	brcs	.-24     	; 0x478 <__mulsf3+0x4>

00000490 <__mulsf3_pse>:
 490:	95 9f       	mul	r25, r21
 492:	d1 f3       	breq	.-12     	; 0x488 <__mulsf3+0x14>
 494:	95 0f       	add	r25, r21
 496:	50 e0       	ldi	r21, 0x00	; 0
 498:	55 1f       	adc	r21, r21
 49a:	62 9f       	mul	r22, r18
 49c:	f0 01       	movw	r30, r0
 49e:	72 9f       	mul	r23, r18
 4a0:	bb 27       	eor	r27, r27
 4a2:	f0 0d       	add	r31, r0
 4a4:	b1 1d       	adc	r27, r1
 4a6:	63 9f       	mul	r22, r19
 4a8:	aa 27       	eor	r26, r26
 4aa:	f0 0d       	add	r31, r0
 4ac:	b1 1d       	adc	r27, r1
 4ae:	aa 1f       	adc	r26, r26
 4b0:	64 9f       	mul	r22, r20
 4b2:	66 27       	eor	r22, r22
 4b4:	b0 0d       	add	r27, r0
 4b6:	a1 1d       	adc	r26, r1
 4b8:	66 1f       	adc	r22, r22
 4ba:	82 9f       	mul	r24, r18
 4bc:	22 27       	eor	r18, r18
 4be:	b0 0d       	add	r27, r0
 4c0:	a1 1d       	adc	r26, r1
 4c2:	62 1f       	adc	r22, r18
 4c4:	73 9f       	mul	r23, r19
 4c6:	b0 0d       	add	r27, r0
 4c8:	a1 1d       	adc	r26, r1
 4ca:	62 1f       	adc	r22, r18
 4cc:	83 9f       	mul	r24, r19
 4ce:	a0 0d       	add	r26, r0
 4d0:	61 1d       	adc	r22, r1
 4d2:	22 1f       	adc	r18, r18
 4d4:	74 9f       	mul	r23, r20
 4d6:	33 27       	eor	r19, r19
 4d8:	a0 0d       	add	r26, r0
 4da:	61 1d       	adc	r22, r1
 4dc:	23 1f       	adc	r18, r19
 4de:	84 9f       	mul	r24, r20
 4e0:	60 0d       	add	r22, r0
 4e2:	21 1d       	adc	r18, r1
 4e4:	82 2f       	mov	r24, r18
 4e6:	76 2f       	mov	r23, r22
 4e8:	6a 2f       	mov	r22, r26
 4ea:	11 24       	eor	r1, r1
 4ec:	9f 57       	subi	r25, 0x7F	; 127
 4ee:	50 40       	sbci	r21, 0x00	; 0
 4f0:	8a f0       	brmi	.+34     	; 0x514 <__mulsf3_pse+0x84>
 4f2:	e1 f0       	breq	.+56     	; 0x52c <__mulsf3_pse+0x9c>
 4f4:	88 23       	and	r24, r24
 4f6:	4a f0       	brmi	.+18     	; 0x50a <__mulsf3_pse+0x7a>
 4f8:	ee 0f       	add	r30, r30
 4fa:	ff 1f       	adc	r31, r31
 4fc:	bb 1f       	adc	r27, r27
 4fe:	66 1f       	adc	r22, r22
 500:	77 1f       	adc	r23, r23
 502:	88 1f       	adc	r24, r24
 504:	91 50       	subi	r25, 0x01	; 1
 506:	50 40       	sbci	r21, 0x00	; 0
 508:	a9 f7       	brne	.-22     	; 0x4f4 <__mulsf3_pse+0x64>
 50a:	9e 3f       	cpi	r25, 0xFE	; 254
 50c:	51 05       	cpc	r21, r1
 50e:	70 f0       	brcs	.+28     	; 0x52c <__mulsf3_pse+0x9c>
 510:	60 cf       	rjmp	.-320    	; 0x3d2 <__fp_inf>
 512:	aa cf       	rjmp	.-172    	; 0x468 <__fp_szero>
 514:	5f 3f       	cpi	r21, 0xFF	; 255
 516:	ec f3       	brlt	.-6      	; 0x512 <__mulsf3_pse+0x82>
 518:	98 3e       	cpi	r25, 0xE8	; 232
 51a:	dc f3       	brlt	.-10     	; 0x512 <__mulsf3_pse+0x82>
 51c:	86 95       	lsr	r24
 51e:	77 95       	ror	r23
 520:	67 95       	ror	r22
 522:	b7 95       	ror	r27
 524:	f7 95       	ror	r31
 526:	e7 95       	ror	r30
 528:	9f 5f       	subi	r25, 0xFF	; 255
 52a:	c1 f7       	brne	.-16     	; 0x51c <__mulsf3_pse+0x8c>
 52c:	fe 2b       	or	r31, r30
 52e:	88 0f       	add	r24, r24
 530:	91 1d       	adc	r25, r1
 532:	96 95       	lsr	r25
 534:	87 95       	ror	r24
 536:	97 f9       	bld	r25, 7
 538:	08 95       	ret

0000053a <__umulhisi3>:
 53a:	a2 9f       	mul	r26, r18
 53c:	b0 01       	movw	r22, r0
 53e:	b3 9f       	mul	r27, r19
 540:	c0 01       	movw	r24, r0
 542:	a3 9f       	mul	r26, r19
 544:	70 0d       	add	r23, r0
 546:	81 1d       	adc	r24, r1
 548:	11 24       	eor	r1, r1
 54a:	91 1d       	adc	r25, r1
 54c:	b2 9f       	mul	r27, r18
 54e:	70 0d       	add	r23, r0
 550:	81 1d       	adc	r24, r1
 552:	11 24       	eor	r1, r1
 554:	91 1d       	adc	r25, r1
 556:	08 95       	ret

00000558 <_exit>:
 558:	f8 94       	cli

0000055a <__stop_program>:
 55a:	ff cf       	rjmp	.-2      	; 0x55a <__stop_program>
